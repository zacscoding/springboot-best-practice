plugins {
    id "org.asciidoctor.convert" version "1.5.9.2"
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    compile 'com.github.gavlyukovskiy:p6spy-spring-boot-starter'
    compile 'org.mariadb.jdbc:mariadb-java-client'

    // guava
    compile 'com.google.guava:guava'

    // jasypt
    compile 'com.github.ulisesbocchio:jasypt-spring-boot'

    // model mapper
    compile 'org.modelmapper:modelmapper'

    // gson
    compile "com.google.code.gson:gson"

    // test
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:2.0.4.RELEASE"
    testImplementation 'org.springframework.security:spring-security-test'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

test {
    exclude 'best/server/console/**'
    outputs.dir snippetsDir
    useJUnitPlatform()
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}